import rclpy
from rclpy.node import Node
from p1_ej3_interface.srv import Angulos
import random  # Para generar nÃºmeros aleatorios

class ServidorAngulos(Node):
    def __init__(self):
        super().__init__('servidor_angulos')
        self.srv = self.create_service(Angulos, '/calcular_angulos', self.callback_angulos)
        self.get_logger().info('âœ… Servidor de Ã¡ngulos listo y esperando solicitudes...')

    def callback_angulos(self, request, response):
        self.get_logger().info(f'ðŸ“¥ Recibido: Î¸1={request.theta1}Â°, Î¸2={request.theta2}Â°, Î¸3={request.theta3}Â°')

        # Generar valores aleatorios como respuesta
        response.x = random.uniform(-10.0, 10.0)
        response.y = random.uniform(-10.0, 10.0)
        response.z = random.uniform(-10.0, 10.0)
        response.roll = random.uniform(-180.0, 180.0)
        response.pitch = random.uniform(-180.0, 180.0)
        response.yaw = random.uniform(-180.0, 180.0)

        self.get_logger().info(f'ðŸ“¤ Respuesta enviada: x={response.x}, y={response.y}, z={response.z}, roll={response.roll}, pitch={response.pitch}, yaw={response.yaw}')
        return response

def main():
    rclpy.init()
    servidor = ServidorAngulos()
    rclpy.spin(servidor)  # Mantener el servidor activo
    servidor.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
